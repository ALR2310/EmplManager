using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the AdminChangeTypeUsers Procedure
        /// </summary>
        public static StoredProcedure AdminChangeTypeUsers(int? Id, int? UserType)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("AdminChangeTypeUsers", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@Id", Id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UserType", UserType, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the ChangeStatusLike Procedure
        /// </summary>
        public static StoredProcedure ChangeStatusLike(int? UserId, int? MessageId, int? Status)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("ChangeStatusLike", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@UserId", UserId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MessageId", MessageId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Status", Status, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the ChangeStatusUser Procedure
        /// </summary>
        public static StoredProcedure ChangeStatusUser(int? Id, int? Status)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("ChangeStatusUser", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@Id", Id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Status", Status, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the InsertLikes Procedure
        /// </summary>
        public static StoredProcedure InsertLikes(int? UserId, int? MessageId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("InsertLikes", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@UserId", UserId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MessageId", MessageId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the InsertMessage Procedure
        /// </summary>
        public static StoredProcedure InsertMessage(int? UserId, string Content)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("InsertMessage", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@UserId", UserId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Content", Content, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the InsertUsers Procedure
        /// </summary>
        public static StoredProcedure InsertUsers(string Avatar, string Email, string DisplayName, string UserName, string Password)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("InsertUsers", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@Avatar", Avatar, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Email", Email, DbType.String, null, null);
        	
            sp.Command.AddParameter("@DisplayName", DisplayName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Password", Password, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the UpdateMessage Procedure
        /// </summary>
        public static StoredProcedure UpdateMessage(int? UserId, string Content)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("UpdateMessage", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@UserId", UserId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Content", Content, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the UpdateUsers Procedure
        /// </summary>
        public static StoredProcedure UpdateUsers(int? Id, string Avatar, string Email, string DisplayName, string UserName, string Password)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("UpdateUsers", DataService.GetInstance("MyDAL"), "dbo");
        	
            sp.Command.AddParameter("@Id", Id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Avatar", Avatar, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Email", Email, DbType.String, null, null);
        	
            sp.Command.AddParameter("@DisplayName", DisplayName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Password", Password, DbType.String, null, null);
        	
            return sp;
        }
        
    }
    
}
